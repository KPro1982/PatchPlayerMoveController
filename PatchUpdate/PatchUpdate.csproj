<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{8E43F488-5FAB-43F1-941A-8960BEB95CAA}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>kScripts</RootNamespace>
        <AssemblyName>kScripts</AssemblyName>
        <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>8</LangVersion>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="0Harmony, Version=2.0.2.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\Assembly-CSharp.dll</HintPath>
        </Reference>
        <Reference Include="DMT, Version=2.2.7569.26209, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\DMT.dll</HintPath>
        </Reference>
        <Reference Include="LogAnywhere, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\LogAnywhere.dll</HintPath>
        </Reference>
        <Reference Include="System"/>
        <Reference Include="System.Core"/>
        <Reference Include="System.Data"/>
        <Reference Include="System.Xml"/>
        <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
            <HintPath>..\..\7days-binaries\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="Mod\Scripts\*.cs"/>
        <Compile Include="Mod\Harmony\*.cs"/>
        <Compile Include="Modlets\*.*"/>
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
    <PropertyGroup>
        <PostBuildEvent>
            echo Generating Release Folder for $(ProjectName)
            :: If you want the target folder to be named differently than your project name, change it here.
            SET TARGET=$(ProjectName)
            SET DEPLOY_PATH=$(SolutionDir)Releases\Mods\%25TARGET%25
            SET GAME_MODS_PATH=C:\Program Files (x86)\Steam\steamapps\common\7 Days To Die\Mods
            echo Deployment will be %25DEPLOY_PATH%25
            echo Modlets will deploy to %25GAME_MODS_PATH%25

            :: Clean up the target folder, if it exists, then remake it. This is to remove stale files.
            IF EXIST "%25DEPLOY_PATH%25" (
            RMDIR /S/Q "%25DEPLOY_PATH%25"
            )

            MKDIR "%25DEPLOY_PATH%25"

            :: Copy the Mods folder over
            echo Copying Mods folder from $(ProjectDir)Mod\%25TARGET%25
            IF EXIST $(ProjectDir)Mod (
            echo Copying over $(ProjectDir)Mod
            xcopy "$(ProjectDir)Mod\*" "%25DEPLOY_PATH%25" /e /y /i /r /q
            )
            :: Copy the Modlets folder over to the game Mods directory
            echo Copying Modlets to %25GAME_MODS_PATH%25
            xcopy "$(ProjectDir)Modlets\*" "%25GAME_MODS_PATH%25" /e /y /i /r /q

            :: Copy the Mods folder over echo Copying Mod folder from $(ProjectDir)Mods\%25TARGET%25
            IF EXIST $(ProjectDir)Root (
            echo Copying over $(ProjectDir)Root
            xcopy "$(ProjectDir)Root\*" "%25DEPLOY_PATH%25\..\..\" /e /y /i /r /q
            )
            echo Generated Build at %25DEPLOY_PATH%25
        </PostBuildEvent>
    </PropertyGroup>
    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->

</Project>
